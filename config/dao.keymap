/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
       &mt GRAVE TAB  &mt NUMBER_1 Q  &mt NUMBER_2 W         &mt NUMBER_3 E  &mt NUMBER_4 R  &mt NUMBER_5 T  &mt NUMBER_6 Y  &mt NUMBER_7 U  &mt NUMBER_8 I  &mt NUMBER_9 O  &mt NUMBER_0 P  &mt RIGHT_BRACKET LEFT_BRACKET
&mt LSHIFT LA(LSHFT)           &kp A           &kp S                  &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L        &kp SEMI                  &mt RSHIFT SQT
    &mt LCTRL ESCAPE           &kp Z           &kp X                  &kp C           &kp V           &kp B           &kp N           &kp M       &kp COMMA         &kp DOT        &kp FSLH                  &mt RCTRL BSLH
                                                      &mt LEFT_ALT LEFT_WIN     &lt 4 SPACE         &kp DEL        &kp BSPC     &lt 1 ENTER  &lt 2 LEFT_ALT
            >;
        };

        arrow_layer {
            bindings = <
             &mt LEFT_WIN TAB  &none  &none  &none        &none       &none       &kp HOME    &kp PG_DN  &kp PG_UP    &kp END  &none      &mt K_CALCULATOR K_CALCULATOR
&mt LEFT_SHIFT LA(LEFT_SHIFT)  &none  &none  &none        &none       &none       &kp LEFT     &kp DOWN     &kp UP  &kp RIGHT  &none  &mt K_CONTEXT_MENU K_CONTEXT_MENU
             &mt LCTRL ESCAPE  &none  &none  &none        &none       &none          &none        &none      &none      &none  &none                              &none
                                             &none  &lt 0 SPACE  &kp DELETE  &kp BACKSPACE  &lt 0 ENTER      &none
            >;
        };

        lower_layer {
            bindings = <
   &mt LGUI F1    &kp F2  &kp F3                &kp F4          &kp F5     &kp F6     &kp F7    &kp F8    &kp F9   &kp F10   &kp F11          &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT              &kp HASH        &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL    &kp N1  &kp N2                &kp N3          &kp N4     &kp N5     &kp N6    &kp N7    &kp N8    &kp N9    &kp N0         &kp RALT
                                  &mt LEFT_CONTROL TAB  &lt 3 LEFT_WIN    &kp DEL   &kp BSPC    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none  &bootloader
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR
 &sys_reset         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none   &sys_reset
                                               &trans         &none        &trans         &none        &trans        &trans
            >;
        };

        numbers_layer {
            bindings = <
         &none  &none  &none  &none  &none  &none     &kp KP_SLASH        &kp KP_N7        &kp KP_N8        &kp KP_N9  &kp KP_MINUS  &kp K_CALC
         &none  &none  &none  &none  &none  &none  &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6   &kp KP_PLUS       &none
&kp KP_NUMLOCK  &none  &none  &none  &none  &none  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &kp KP_DOT
                              &none  &none  &none            &none            &none            &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none  &none  &none
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM     &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP         &kp SLCK         &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp C_MUTE  &kp LEFT     &kp UP  &kp RIGHT          &kp INS  &mt RCTRL K_APP
       &kp LALT        &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_DOT  &kp C_VOL_DN   &kp END   &kp DOWN  &kp PG_DN  &kp PAUSE_BREAK         &kp RALT
                                                &trans     &trans     &lt 0 RET     &lt 0 ESC    &trans     &trans
            >;
        };
    };
};
